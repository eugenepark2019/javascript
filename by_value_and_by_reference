//by value(primitives) 
var a = 3; 
var b; 

b = a; 
a = 2 ; 
console.log(a);   // 2
console.log(b);   // 3

//by reference(all objects(including functions)) 

var c = {greeting:'hi'}; 
var d; 

d = c; 
c.greeting = 'Hello';//Mutate:To change something(immeutable=means it can't be changed) 

console.log(c); //{greeting: "Hello"}

console.log(d); //{greeting: "Hello"}

//by reference(even as parameters)
function changeGreeting(obj){
	obj.greeting = 'Hola'; //mutate
}

changeGreeting(d);
console.log(c); //{greeting: "Hola"}
console.log(d);// {greeting: "Hola"}

//equals operator sets up new memory space (new address)
c = {greeting:'howdy'};
console.log(c);     //{greeting: "howdy"}
console.log(d) ;    //{greeting: "Hola"}
